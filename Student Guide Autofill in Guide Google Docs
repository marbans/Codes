function onOpen() {
  const ui = SpreadsheetApp.getUi();
  const menu = ui.createMenu('Create Guide For Student');
  menu.addItem('Create New Docs', 'createNewGoogleDocsForStudent')
  menu.addToUi();

}

function createNewGoogleDocsForStudent() {
  //This value should be the id of your document template that we created in the last step
  const googleDocTemplate = DriveApp.getFileById('template');
  
  //This value should be the id of the folder where you want your completed documents stored
  const destinationFolder = DriveApp.getFolderById('destination')
  //Here we store the sheet as a variable
  const sheet = SpreadsheetApp
    .getActiveSpreadsheet()
    .getSheetByName('Students - Windows - Auto Fill Google Doc from Spreadsheet')
  
  //Now we get all of the values as a 2D array
  const rows = sheet.getDataRange().getValues();
  
  //Start processing each spreadsheet row
  rows.forEach(function(row, index){
    //Here we check if this row is the headers, if so we skip it
    if (index === 0) return;
    //Here we check if a document has already been generated by looking at 'Document Link', if so we skip it
    if (row[3]) return;
    //Using the row data in a template literal, we make a copy of our template document in our destinationFolder
    const copy = googleDocTemplate.makeCopy(`${row[0]}  ${row[1]} Account Guide` , destinationFolder)
    //Once we have the copy, we then open it using the DocumentApp
    const doc = DocumentApp.openById(copy.getId())
    //All of the content lives in the body, so we get that for editing
    const body = doc.getBody();
   
    
    //In these lines, we replace our replacement tokens with values from our spreadsheet row
    body.replaceText('{{Name}}', row[0]);
    body.replaceText('{{Username}}', row[1]);
    body.replaceText('{{Password}}', row[2]);
   
    
    //We make our changes permanent by saving and closing the document
    doc.saveAndClose();
    //Store the url of our new document in a variable
    const url = doc.getUrl();
    //Write that value back to the 'Document Link' column in the spreadsheet. 
    sheet.getRange(index + 1, 4).setValue(url)
    
  })
  
}

